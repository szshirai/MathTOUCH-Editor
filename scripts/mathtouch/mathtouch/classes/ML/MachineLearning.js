MathTOUCH.MachineLearningData = function(){    this.Sxtml;}MathTOUCH.MachineLearningData.prototype.readData=function(strdata){    this.Sxtml=new Array();    var smpnum=4000;    var testXTML = strdata.split("\n");    console.log("dlen="+testXTML.length+" : "+testXTML[0]);    if(testXTML.length!=smpnum){ alert("testData No. error!"+testXTML.length);        return;    }    var xtml1;    var i,j;    for(i=0;i<testXTML.length;i++){        xtml1=testXTML[i];        while((j=xtml1.indexOf("@@b"))>=0){            xtml1=xtml1.substring(0,j)+"\u21E9"+xtml1.substring(j+3);        }        while((j=xtml1.indexOf("@@e"))>=0){            xtml1=xtml1.substring(0,j)+"\u22A1"+xtml1.substring(j+3);        }        while((j=xtml1.indexOf("@@r"))>=0){            xtml1=xtml1.substring(0,j)+"\u23cE"+xtml1.substring(j+3);        }        while((j=xtml1.indexOf("@@t"))>=0){            xtml1=xtml1.substring(0,j)+"\u27B1"+xtml1.substring(j+3);        }        while((j=xtml1.indexOf("@@c"))>=0){            xtml1=xtml1.substring(0,j)+"\u201A"+xtml1.substring(j+3);        }        var ex=EXTML.parseAny(xtml1);        if(ex==null){alert("["+i+"]parseError "+testXTML[i]);}        this.Sxtml[i]=xtml1;    }}MathTOUCH.MachineLearningData.prototype.EvaluationOfMLData = function(){    var NMax=500;    var idx=0;    var dnum=4000;    var testNumber=7;    var ex;    console.log("res"+testNumber+"_"+Math.floor(dnum/1000)+Math.floor((dnum%1000)/100)+Math.floor((dnum%100)/10)+(dnum%10));    console.log("No.,DataNo.,input,input length,time,project number,result,correct score,top score");    for(var i=0;i<NMax;i++){        idx=i*8+testNumber;        ex=EXTML.parseAny(this.Sxtml[idx]);        this.testEval2(i,idx,ex);    }    console.log("End Evalation!");}MathTOUCH.MachineLearningData.prototype.readMLData=function(strdata){    this.readData(strdata);    var MLfile="SCORE4000_220704";    NES.clearTable();    NES.readTable(MLfile);    console.log("ML xml read:"+MLfile);}MathTOUCH.MachineLearningData.prototype.makeMLData=function(){    var smpnum=4000;    var NMax=500;    var idx=0;    var ex;    if(this.Sxtml.length!=smpnum){ alert("No sample data!");return;}    NES.clearTable();    var N=0;    for(N=0;N<smpnum/NMax;N++){        for(var i=0;i<NMax;i++){            idx=i*8+N;            ex=EXTML.parseAny(this.Sxtml[idx]);            this.testEval(idx,ex);        }    }    console.log("End Learning.");}MathTOUCH.MachineLearningData.prototype.testEval=function(idx,sex){    var linearStr=sex.getInputWord();    var anstop=new MathTOUCH.Top10();    var Nbest=10;    var smpstart=1;    anstop.setMax(Nbest);    var vans;    var starttime=new Date().getTime();    var endtime;    var calcstop=false;    var middle;    var ttrie=new MathTOUCH.termTrie(linearStr);    ttrie.addAnotherOpeTypeRoot();    ttrie.makeMiddleList();    var mmm;    var projNum=ttrie.middleList.length;    var projMax=Nbest;    var pcount=0;    var ncount=0;    var termNum=0;    if(projNum>0) termNum=ttrie.middleList[0].toknum+1;    if(projNum>30) starttime=new Date().getTime();    for(var j=0;j<projNum;j++){        mmm=ttrie.middleList[j];        mmm.divpointTrace();        mmm.setMax(Nbest);        middle=new Date().getTime();        if((middle-starttime)>3000){            calcstop=true;            j=projNum;            break;        }        if(mmm.toknum>termNum&&anstop.getLastNumber()>0){            continue;        }        else {            vans=mmm.makeEXtreeStructure(0,mmm.toknum,starttime);        }                middle=new Date().getTime();        for(var i=0;i<vans.getLastNumber();i++){            if(mmm.toknum==1){                anstop.addIn(vans.getEXtreeAt(i),vans.getScoreAt(i));            }            else if(anstop.rankInUni(vans.getEXtreeAt(i),vans.getScoreAt(i))>=0){            }        }        middle=new Date().getTime();        if((middle-starttime)>3000){            calcstop=true;            j=projNum;            break;        }    }    endtime=new Date().getTime();    var Ntop=anstop.getLastNumber();    var hit="Hit";    if(Ntop>0){            if(!sex.equals(anstop.getEXtreeAt(0))){                hit="Not";                NES.addScore(sex,2);                NES.addScore(anstop.getEXtreeAt(0),-1);            }    }    if(calcstop){        //console.log("No."+(smpstart+idx)+hit+"("+idx+"):tpoNum="+Ntop+",3秒以上（打切）");    }    else{        //console.log("No."+(smpstart+idx)+hit+"("+idx+"):tpoNum="+Ntop+",ctime="+(endtime-starttime)/1000);    }}MathTOUCH.MachineLearningData.prototype.testEval2=function(no,idx,sex){    var Sinput=sex.getInputWord();    var Sscore=NES.countScore(sex);    var Sscore1;    var Sresult;    var anstop=new MathTOUCH.Top10();    var Nbest=10;    anstop.setMax(Nbest);    var vans;    var starttime=new Date().getTime();    var endtime;    var calcstop=false;    var middle;    var ttrie=new MathTOUCH.termTrie(Sinput);    ttrie.addAnotherOpeTypeRoot();    ttrie.makeMiddleList();    var mmm;    var projNum=ttrie.middleList.length;        if(projNum>30) starttime=new Date().getTime();    var projMax=Nbest;    var pcount=0;    var ncount=0;    var termNum=0;    if(projNum>0) termNum=ttrie.middleList[0].toknum+1;    for(var j=0;j<projNum;j++){        mmm=ttrie.middleList[j];        mmm.divpointTrace();        mmm.setMax(Nbest);        middle=new Date().getTime();        if((middle-starttime)>3000){            calcstop=true;            j=projNum;            break;        }        if(mmm.toknum>termNum&&anstop.getLastNumber()>0){            continue;        }        else {            vans=mmm.makeEXtreeStructure(0,mmm.toknum,starttime);        }        for(var i=0;i<vans.getLastNumber();i++){            if(mmm.toknum==1){                anstop.addIn(vans.getEXtreeAt(i),vans.getScoreAt(i));            }            else if(anstop.rankInUni(vans.getEXtreeAt(i),vans.getScoreAt(i))>=0){            }        }        middle=new Date().getTime();        if((middle-starttime)>3000){            calcstop=true;            j=projNum;            break;        }/    }    endtime=new Date().getTime();    var Ntop=anstop.getLastNumber();    var hit="Hit";    if(Ntop>0){        Sresult=0;        Sscore1=anstop.getScoreAt(0);        projNum=Ntop;        for(var j=0;j<Ntop;j++){            if(sex.equals(anstop.getEXtreeAt(j))){                Sresult=j+1;                break;            }        }    }    else{        projNum=0;        Sscore1=0;        Sresult=0;    }    if(calcstop){        console.log(no+","+idx+",\""+Sinput+"\","+Sinput.length+","+(endtime-starttime)/1000+","+projNum+","+Sresult+","+Sscore+","+Sscore1+",3秒以上（打切）");    }    else{        console.log(no+","+idx+",\""+Sinput+"\","+Sinput.length+","+(endtime-starttime)/1000+","+projNum+","+Sresult+","+Sscore+","+Sscore1);    }}var EMLD=new MathTOUCH.MachineLearningData();var readbtn=document.getElementById("readBTN");readbtn.addEventListener('click',function () {    EMLD.readData(document.getElementById("inputSC").textContent);});var databtn=document.getElementById("makedataBTN");databtn.addEventListener('click',function () {    EMLD.makeMLData();});var outbtn=document.getElementById("outBTN");outbtn.addEventListener('click',function () {    console.log(NES.writeXML());});var inputbtn=document.getElementById("inputBTN");inputbtn.addEventListener('click',function () {    NES.init("./");});var evalbtn=document.getElementById("evalBTN");evalbtn.addEventListener('click',function () {    EMLD.EvaluationOfMLData();});